_
_1
a
active
add
any
arguments
ARGV
attr_reader
axiom
b
backtrace
backup
BACKUPS
basename
blk
c
chomp
class
clear
code
combination
combos
compound
conclusion
config_nvim
const_get
context
count
cp_r
define
definition
delete
dest
detach
detect
detect_statement
__dir__
directory
dirname
do_install
dump
e
each
each_key
empty
err
Error
eval
existential
exit
expand_path
expected_instantiations
File
filename
FileUtils
first
follows
freeze
function
gsub
handle_options
heap
Heap
heap_combos_search
heap_search
HelpParser
i
ij
ij_kl
imports
include
inference
initialize
inject
inspect
install
instance_eval
instantiation
is_a
j
join
key
key_value
kl
klass
Korekto
last
length
let
limit
line_number
lines
literal_regexp
load
local_pack
Main
map
mapping
Marshal
match
max
M_COMMENT_LINE
md
MD_FILENAME
MD_FUNCTION
MD_KEY_VALUE
MD_KLASS_METHOD_DEFINITION
MD_RULE
MD_STATEMENT_CODE_TITLE
MD_TYPE_PATTERN
MD_TYPE_VARIABLES
message
method
method_defined
M_FENCE
mkdir_p
n
new
newlines_count
newvar
nil
nl
Object
oldvar
options
out
parse
patch
pattern
patterns
pattern_type
pop
postulate
preprocess
print
private
Process
push
puts
quit
quote
raise
readlines
readme
regex
regexp
Regexp
replacement
require
restatement
result
reverse
Ruby33
rule
run
RuntimeError
s
s0
s1
s2
s2r
scan
scrape
section
seen
select
set
Set
set_acceptance_code
set_regexp
set_scanner
set_statement
shift
sort
spawn
spawn_readme
split
src
StandardError
statement
Statement
statement_number
statements
Statements
strip
support
symbols
Symbols
syntax
Syntax
syntax_check
system
t2p
t2p_gsub
target
tautology
title
to_a
to_i
to_s
to_str
trace
type
type_pattern
type_variables
undefined
unshift
UpdateRemotePlugins
v
v2t
value
variable
variables
VERSION
w
warn
