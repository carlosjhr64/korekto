#!/usr/bin/env ruby
require 'korekto'

def do_install
  require 'fileutils'
  # pack
  dest = File.expand_path '~/.local/share/nvim/site/pack/korekto'
  FileUtils.mkdir_p dest
  src = File.join File.dirname(__dir__), 'start'
  FileUtils.cp_r src, dest
  # rplugin
  dest = File.expand_path '~/.config/nvim'
  src = File.join File.dirname(__dir__), 'rplugin'
  FileUtils.cp_r src, dest
  system "nvim -c ':UpdateRemotePlugins|:quit' > /dev/null"
  exit
end

def spawn_readme
  Process.detach spawn('xdg-open', 'https://www.github.com/carlosjhr64/korekto',
                       %i[out err] => '/dev/null')
  exit
end

def handle_options
  require 'help_parser'
  options = HelpParser[Korekto::VERSION, <<~HELP]
    Usage:
      korekto [:options+]
    Options:
     -h --help
     -v --version
     --edits     \tShow only needed edits
     --patch     \tAllow monkey patching in stdin
     --install   \tInstalls the korekto neovim ruby plugin
     --readme    \tOpen korekto github page
    # Example usage:
    #   cat MARKDOWN.md | korekto
    #   korekto < MARKDOWN.md
  HELP
  do_install if options.install?
  spawn_readme if options.readme?
  Korekto.edits = options.edits?
  Korekto.patch = options.patch?
end

unless ARGV.empty? || ((ARGV==['--edits']) && (Korekto.edits=true))
  handle_options
end
Korekto.run
