#! ruby
require 'test/unit'
module Korekto
  class Error < Exception; end
end
require 'korekto/symbols'
require 'korekto/s2r'

class TestS2R < Test::Unit::TestCase
  def test_s2r
    s2r = Korekto::S2R.new

    # literally spelling out the regexp
    regexp = s2r['/^match$/']
    assert_equal Regexp, regexp.class
    assert_equal '/^match$/', regexp.inspect

    # using variable pattern translations, straight pass
    error = assert_raises(Korekto::Error) do
      regexp = s2r['a=a']
    end
    assert_equal 'pattern with no captures', error.message

    # using variable pattern translations, a => \w
    s2r.t2p[':Variable'] = '\w'
    s2r.v2t['a'] = ':Variable'
    regexp = s2r['a=a']
    assert_equal Regexp, regexp.class
    assert_equal '/^(\w)=\1$/', regexp.inspect
  end
end
